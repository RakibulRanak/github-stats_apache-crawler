[
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "18/Apr/07 16:06",
    "created_at_epoch": 1176912360,
    "description": null,
    "comments": [],
    "id": 1,
    "url": "https://issues.apache.org/jira/browse/CAMEL-1"
  },
  {
    "type": "Bug",
    "assignee": "Hiram R. Chirino",
    "createdAt": "18/May/07 12:57",
    "created_at_epoch": 1179493020,
    "description": "Will attach a dump",
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "18/May/07 16:01",
        "created_at_epoch": 1179504060,
        "text": "Fixed.  Cwiki updated for amq, nms, cpp, and camel spaces."
      }
    ],
    "id": 2,
    "url": "https://issues.apache.org/jira/browse/CAMEL-2"
  },
  {
    "type": "Bug",
    "assignee": "James Strachan",
    "createdAt": "04/Jun/07 07:38",
    "created_at_epoch": 1180942680,
    "description": "publicvoid testNPE()throwsException {finalCamelContext camelContext =newDefaultCamelContext();finalStringfromQueue =\"queue:A\";\n        camelContext.addRoutes(newRouteBuilder() {publicvoid configure()throwsException {\n                from(fromQueue).process(newProcessor() {publicvoid process(Exchange exchange)throwsException {finalMessage in = exchange.getIn();\n                        assertNotNull(\"Message is Null\", in);StringisDebugString = in.getHeader(\"someproperty\",String.class);\n                        assertNull(isDebugString);\n                        assertNotNull(\"Message is Null\", in);booleanisDebug = in.getHeader(\"someproperty\",Boolean.class);\n                        assertFalse(isDebug);\n                    }\n                });\n            }\n        });\n        camelContext.start();newCamelTemplate(camelContext).sendBody(fromQueue,\"ha!\");Thread.sleep(5000L);\n    }throws NPE on the isDebug = ... line.",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "04/Jun/07 10:09",
        "created_at_epoch": 1180951740,
        "text": "I've added a test case herehttps://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/issues/Issue3Test.javawhich is a minor refactor of your test case. (I switched to the direct: endpoint so that the send is synchronous, so no need to sleep & the exception fails the test case - also I used the handy base class for starting/stopping the context etc).I got a valid stack trace BTW. I suspect the reason you didn't was a JVM thing (e.g. try running with hotspot disabled maybe?).Basically the issue was to do with Java 5's type coercion and not anything specific with Camel.Boolean b = in.getHeader(\"foo\", Boolean.class);does work fine and returns null for an undefined property. However if you force it to be coerced to a 'boolean' rather than 'Boolean') you get an NPE as the value is null (since there is no header called \"foo\"). (The same is true when converting from Integer to int when the value is null).I've just patched the converter code so that if you doboolean b = in.getHeader(\"foo\", boolean.class);then it returns a valid value and does not throw an NPE. (i.e. it returns false for missing headers)."
      }
    ],
    "id": 3,
    "url": "https://issues.apache.org/jira/browse/CAMEL-3"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Jun/07 20:51",
    "created_at_epoch": 1181249460,
    "description": null,
    "comments": [],
    "id": 4,
    "url": "https://issues.apache.org/jira/browse/CAMEL-4"
  },
  {
    "type": "New Feature",
    "assignee": "Willem Jiang",
    "createdAt": "07/Jun/07 20:54",
    "created_at_epoch": 1181249640,
    "description": "There's some discussion on this issue here:http://www.nabble.com/Monitoring-and-management-of-Camel-tf3886171s22882.html",
    "comments": [],
    "id": 5,
    "url": "https://issues.apache.org/jira/browse/CAMEL-5"
  },
  {
    "type": "New Feature",
    "assignee": "Willem Jiang",
    "createdAt": "07/Jun/07 20:54",
    "created_at_epoch": 1181249640,
    "description": "There's some discussion on this issue here:http://www.nabble.com/Monitoring-and-management-of-Camel-tf3886171s22882.html",
    "comments": [
      {
        "author": "Willem Jiang",
        "created_at": "19/May/08 02:32",
        "created_at_epoch": 1211164320,
        "text": "Current Camel uses LifecycleStrategy to listen the Context's creation, Endpoint, Router, Service's adding events.So they are the same thing with the CamelRouterListener and CamelEndpointListener.Since there is no method call for the route and endpoint stopping, removing in camel, all these instance will be clean up when stopping the CamelContext.I think we can resolve this issue."
      }
    ],
    "id": 6,
    "url": "https://issues.apache.org/jira/browse/CAMEL-6"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Jun/07 21:07",
    "created_at_epoch": 1181250420,
    "description": "Background:http://www.enterpriseintegrationpatterns.com/Aggregator.htmlDocs go here:http://activemq.apache.org/camel/enterprise-integration-patterns.html",
    "comments": [],
    "id": 7,
    "url": "https://issues.apache.org/jira/browse/CAMEL-7"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Jun/07 21:09",
    "created_at_epoch": 1181250540,
    "description": "Background:http://www.enterpriseintegrationpatterns.com/DynamicRouter.htmlDocs:http://activemq.apache.org/camel/enterprise-integration-patterns.html",
    "comments": [],
    "id": 8,
    "url": "https://issues.apache.org/jira/browse/CAMEL-8"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Jun/07 21:11",
    "created_at_epoch": 1181250660,
    "description": "To visualise routes as DOT files or in Eclipse we need to be able to walk the tree as simple POJOs more easily",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "30/Jul/07 16:53",
        "created_at_epoch": 1185814380,
        "text": "FWIW the need for this has diminished slightly due to the new JAXB2 POJO model we have; as the POJO model is fairly easy to navigate"
      },
      {
        "author": "James Strachan",
        "created_at": "28/Aug/07 11:12",
        "created_at_epoch": 1188299520,
        "text": "I don't think we need this anymore as we have the POJO model for the routing definition in org.apache.camel.model package"
      }
    ],
    "id": 9,
    "url": "https://issues.apache.org/jira/browse/CAMEL-9"
  },
  {
    "type": "New Feature",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "07/Jun/07 21:12",
    "created_at_epoch": 1181250720,
    "description": null,
    "comments": [],
    "id": 10,
    "url": "https://issues.apache.org/jira/browse/CAMEL-10"
  },
  {
    "type": "New Feature",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "07/Jun/07 21:14",
    "created_at_epoch": 1181250840,
    "description": "e.g. be able to look in camel-core or camel-jms or whatever and see what types from -> to etce.g.Document -> String, Source, byte[], Stax ....etc",
    "comments": [],
    "id": 11,
    "url": "https://issues.apache.org/jira/browse/CAMEL-11"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Jun/07 21:17",
    "created_at_epoch": 1181251020,
    "description": "we've got the basic camel.view classes for making a DOT file (wiki notation for graphical pictures of routes). e.g. see ServiceMix stuff...http://incubator.apache.org/servicemix/visualisation.htmlso we need to be able to automatically generate nice graphs",
    "comments": [],
    "id": 12,
    "url": "https://issues.apache.org/jira/browse/CAMEL-12"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "11/Jun/07 17:42",
    "created_at_epoch": 1181583720,
    "description": "Component for Remote Files. Similar to the File Component, but using remote files over various protocols (currently supporting FTP, SFTP. WebDAV planned).Generally works, but still needs unit tests.",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "11/Jun/07 18:24",
        "created_at_epoch": 1181586240,
        "text": "Patch applied with many thanks! I added an Apache FtpServer based test case too. We get an error warning when the test case runs we should tidy up (to do with shutting down while the poller keeps on going) but other than that its looking great! Nicely done!"
      }
    ],
    "id": 13,
    "url": "https://issues.apache.org/jira/browse/CAMEL-13"
  },
  {
    "type": "New Feature",
    "assignee": "Noah Nordrum",
    "createdAt": "11/Jun/07 19:07",
    "created_at_epoch": 1181588820,
    "description": "If you have a route that goes through a processor that is expensive, you may want to pool that processor so it's not holding up the rest of the route.Configuration could look as such:from(\"activemq:queue:SOMETHING\").pool(5 [min], 15 [max]).process(newExpensiveMessageEnricher()).to(\"activemq:queue:SOMEWHERE_ELSE\");\nor\nfrom(\"activemq:queue:SOMETHING\").process(newExpensiveMessageEnricher()).pool(5 [min], 15 [max]).to(\"activemq:queue:SOMEWHERE_ELSE\");I'm not sure exactly how these would differ, but I think the first one would have 5-15 MQ queue listeners, which would all go through 1 EME, and then through 1 mq producer, and the second would have 1 mq listener that would dispatch to one of the 5-15 EME threads (if available?, not sure if that level of interaction between steps is good), and then go through 1 mq producer.Seems like the first would be the better option as I write this...Notes from IRC convo with James:first thought is; we might wanna wrap a Producer in a factory thingy that does pooling (e.g. like the way spring does pooling using interceptors etc); but that the pool part could be done wherever a Processor can be used",
    "comments": [],
    "id": 14,
    "url": "https://issues.apache.org/jira/browse/CAMEL-14"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:16",
    "created_at_epoch": 1181675760,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:17",
        "created_at_epoch": 1181675820,
        "text": "implemented."
      }
    ],
    "id": 15,
    "url": "https://issues.apache.org/jira/browse/CAMEL-15"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:24",
    "created_at_epoch": 1181676240,
    "description": "Be able to send and receive exchanges from JMS endpoints.",
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:24",
        "created_at_epoch": 1181676240,
        "text": "implemented."
      }
    ],
    "id": 16,
    "url": "https://issues.apache.org/jira/browse/CAMEL-16"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:37",
    "created_at_epoch": 1181677020,
    "description": "Provide a declarative way to correlate the multiple process actions related to business activity and generate monitoring events when pocessing constraints are violated.",
    "comments": [],
    "id": 17,
    "url": "https://issues.apache.org/jira/browse/CAMEL-17"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:40",
    "created_at_epoch": 1181677200,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:40",
        "created_at_epoch": 1181677200,
        "text": "implemented."
      }
    ],
    "id": 18,
    "url": "https://issues.apache.org/jira/browse/CAMEL-18"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:45",
    "created_at_epoch": 1181677500,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:45",
        "created_at_epoch": 1181677500,
        "text": "implemented."
      }
    ],
    "id": 19,
    "url": "https://issues.apache.org/jira/browse/CAMEL-19"
  },
  {
    "type": "New Feature",
    "assignee": "Hiram R. Chirino",
    "createdAt": "12/Jun/07 19:47",
    "created_at_epoch": 1181677620,
    "description": "Allows for subsequent Exchange processors to work with an exchanages that has a Pojo based body.",
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:48",
        "created_at_epoch": 1181677680,
        "text": "The JaxbConverter has been implemented but I have not seen any use cases for it."
      },
      {
        "author": "James Strachan",
        "created_at": "30/Jul/07 16:52",
        "created_at_epoch": 1185814320,
        "text": "the camel-jaxb module now has a FaillbackTypeConverter so that any POJO which has an @XmlRootElement is automatically convertable to a stream/Source/Result/Document etc.However we should also add some JaxbMarshaller plugin so that if a POJO does not have any JAXB annotations we can still use a JAXB conversion"
      },
      {
        "author": "James Strachan",
        "created_at": "11/Oct/07 18:29",
        "created_at_epoch": 1192127340,
        "text": "see theData Format supportsuch as forJAXB"
      }
    ],
    "id": 20,
    "url": "https://issues.apache.org/jira/browse/CAMEL-20"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:50",
    "created_at_epoch": 1181677800,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 19:50",
        "created_at_epoch": 1181677800,
        "text": "implemented."
      }
    ],
    "id": 21,
    "url": "https://issues.apache.org/jira/browse/CAMEL-21"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:53",
    "created_at_epoch": 1181677980,
    "description": null,
    "comments": [],
    "id": 22,
    "url": "https://issues.apache.org/jira/browse/CAMEL-22"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:56",
    "created_at_epoch": 1181678160,
    "description": "The jpa: component allows you to work with databases using JPA (EJB 3 Persistence) such as for working with OpenJPA, Hibernate, TopLink to work with relational databases.Sending POJOs to the JPA endpoint inserts entities into the database. Consuming messages removes (or updates) entities in the database.",
    "comments": [],
    "id": 23,
    "url": "https://issues.apache.org/jira/browse/CAMEL-23"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 19:58",
    "created_at_epoch": 1181678280,
    "description": null,
    "comments": [],
    "id": 24,
    "url": "https://issues.apache.org/jira/browse/CAMEL-24"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:02",
    "created_at_epoch": 1181678520,
    "description": null,
    "comments": [],
    "id": 25,
    "url": "https://issues.apache.org/jira/browse/CAMEL-25"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:03",
    "created_at_epoch": 1181678580,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:04",
        "created_at_epoch": 1181678640,
        "text": "implemented. see:http://activemq.apache.org/camel/mail.html"
      }
    ],
    "id": 26,
    "url": "https://issues.apache.org/jira/browse/CAMEL-26"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:04",
    "created_at_epoch": 1181678640,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:04",
        "created_at_epoch": 1181678640,
        "text": "implemented. see:http://activemq.apache.org/camel/mail.html"
      }
    ],
    "id": 27,
    "url": "https://issues.apache.org/jira/browse/CAMEL-27"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:06",
    "created_at_epoch": 1181678760,
    "description": null,
    "comments": [],
    "id": 28,
    "url": "https://issues.apache.org/jira/browse/CAMEL-28"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:08",
    "created_at_epoch": 1181678880,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:23",
        "created_at_epoch": 1181679780,
        "text": "implemented:http://activemq.apache.org/camel/quartz.html"
      }
    ],
    "id": 29,
    "url": "https://issues.apache.org/jira/browse/CAMEL-29"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:09",
    "created_at_epoch": 1181678940,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:09",
        "created_at_epoch": 1181678940,
        "text": "implemented.  See:http://activemq.apache.org/camel/rmi.html"
      }
    ],
    "id": 30,
    "url": "https://issues.apache.org/jira/browse/CAMEL-30"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:11",
    "created_at_epoch": 1181679060,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:11",
        "created_at_epoch": 1181679060,
        "text": "implemented."
      }
    ],
    "id": 31,
    "url": "https://issues.apache.org/jira/browse/CAMEL-31"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:13",
    "created_at_epoch": 1181679180,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:13",
        "created_at_epoch": 1181679180,
        "text": "implemented."
      }
    ],
    "id": 32,
    "url": "https://issues.apache.org/jira/browse/CAMEL-32"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:14",
    "created_at_epoch": 1181679240,
    "description": null,
    "comments": [],
    "id": 33,
    "url": "https://issues.apache.org/jira/browse/CAMEL-33"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:16",
    "created_at_epoch": 1181679360,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:17",
        "created_at_epoch": 1181679420,
        "text": "implemented.  See the JMS component for a use case."
      }
    ],
    "id": 34,
    "url": "https://issues.apache.org/jira/browse/CAMEL-34"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:19",
    "created_at_epoch": 1181679540,
    "description": "Provide a spring remoting implemenation that can invoke Camel PojoExchanges and expose Spring pojos as via PojoExchanges on the camel router.",
    "comments": [],
    "id": 35,
    "url": "https://issues.apache.org/jira/browse/CAMEL-35"
  },
  {
    "type": "Task",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:20",
    "created_at_epoch": 1181679600,
    "description": null,
    "comments": [],
    "id": 36,
    "url": "https://issues.apache.org/jira/browse/CAMEL-36"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:22",
    "created_at_epoch": 1181679720,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:22",
        "created_at_epoch": 1181679720,
        "text": "implemented:http://activemq.apache.org/camel/xmpp.html"
      }
    ],
    "id": 37,
    "url": "https://issues.apache.org/jira/browse/CAMEL-37"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:35",
    "created_at_epoch": 1181680500,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:36",
        "created_at_epoch": 1181680560,
        "text": "implemented. see:http://activemq.apache.org/camel/direct.html"
      }
    ],
    "id": 38,
    "url": "https://issues.apache.org/jira/browse/CAMEL-38"
  },
  {
    "type": "New Feature",
    "assignee": "Hiram R. Chirino",
    "createdAt": "12/Jun/07 20:38",
    "created_at_epoch": 1181680680,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:38",
        "created_at_epoch": 1181680680,
        "text": "implemented. See:http://activemq.apache.org/camel/file.html"
      }
    ],
    "id": 39,
    "url": "https://issues.apache.org/jira/browse/CAMEL-39"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:40",
    "created_at_epoch": 1181680800,
    "description": null,
    "comments": [],
    "id": 40,
    "url": "https://issues.apache.org/jira/browse/CAMEL-40"
  },
  {
    "type": "New Feature",
    "assignee": "Hiram R. Chirino",
    "createdAt": "12/Jun/07 20:41",
    "created_at_epoch": 1181680860,
    "description": null,
    "comments": [],
    "id": 41,
    "url": "https://issues.apache.org/jira/browse/CAMEL-41"
  },
  {
    "type": "New Feature",
    "assignee": "Hiram R. Chirino",
    "createdAt": "12/Jun/07 20:43",
    "created_at_epoch": 1181680980,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:43",
        "created_at_epoch": 1181680980,
        "text": "implemented.  see:http://activemq.apache.org/camel/queue.html"
      }
    ],
    "id": 42,
    "url": "https://issues.apache.org/jira/browse/CAMEL-42"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:44",
    "created_at_epoch": 1181681040,
    "description": null,
    "comments": [],
    "id": 43,
    "url": "https://issues.apache.org/jira/browse/CAMEL-43"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jun/07 20:47",
    "created_at_epoch": 1181681220,
    "description": null,
    "comments": [
      {
        "author": "Hiram R. Chirino",
        "created_at": "12/Jun/07 20:48",
        "created_at_epoch": 1181681280,
        "text": "implemented.See:http://activemq.apache.org/camel/dsl.html"
      }
    ],
    "id": 44,
    "url": "https://issues.apache.org/jira/browse/CAMEL-44"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "13/Jun/07 18:31",
    "created_at_epoch": 1181759460,
    "description": null,
    "comments": [
      {
        "author": "Willem Jiang",
        "created_at": "31/Jul/07 08:51",
        "created_at_epoch": 1185871860,
        "text": "we could add a demo to show how to combine the CXF with camle"
      },
      {
        "author": "Willem Jiang",
        "created_at": "28/Sep/07 04:21",
        "created_at_epoch": 1190953260,
        "text": "This patch contains a demo to show how to use came as a port router of webservice."
      },
      {
        "author": "Willem Jiang",
        "created_at": "28/Sep/07 06:44",
        "created_at_epoch": 1190961840,
        "text": "Just fixed a cxf producer client create bug.Please use this patch file."
      },
      {
        "author": "James Strachan",
        "created_at": "01/Oct/07 14:07",
        "created_at_epoch": 1191247620,
        "text": "Patch applied - though it needs documentation - could you edit this page please to add a link to the CXF example?http://activemq.apache.org/camel/examples.htmlI get this log when I try and run it - is that expected?...Hello there jstrachan01-Oct-2007 15:02:13 org.apache.cxf.transport.jms.JMSDestination$JMSExecutor runINFO: run the incoming message in the threadpool01-Oct-2007 15:02:13 org.apache.camel.example.cxf.GreeterImpl pingMeINFO: Executing operation pingMe, throwing PingMeFault exception, message = helloExecuting operation pingMe, throwing PingMeFault exception01-Oct-2007 15:02:13 org.apache.cxf.phase.PhaseInterceptorChain doInterceptINFO: Interceptor has thrown exception, unwinding noworg.apache.cxf.interceptor.Fault: PingMeFault raised by serverat org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:101)at org.apache.cxf.jaxws.JAXWSMethodInvoker.createFault(JAXWSMethodInvoker.java:76)at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:90)at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:100)at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:63)at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:56)at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:92)at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)at org.apache.cxf.transport.jms.JMSDestination.incoming(JMSDestination.java:200)at org.apache.cxf.transport.jms.JMSDestination$JMSExecutor.run(JMSDestination.java:331)at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)at java.lang.Thread.run(Thread.java:613)Caused by: org.apache.hello_world_soap_http.PingMeFault: PingMeFault raised by serverat org.apache.camel.example.cxf.GreeterImpl.pingMe(GreeterImpl.java:69)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)at java.lang.reflect.Method.invoke(Method.java:585)at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:107)at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:77)... 12 more01-Oct-2007 15:02:13 org.apache.cxf.phase.PhaseInterceptorChain doInterceptINFO: Interceptor has thrown exception, unwinding noworg.apache.cxf.interceptor.Fault: PingMeFault raised by serverat org.apache.camel.component.cxf.CamelInvoker.invoke(CamelInvoker.java:171)at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:56)at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:92)at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:268)at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:224)at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)at org.mortbay.jetty.Server.handle(Server.java:313)at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:844)at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:726)at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)Caused by: org.apache.hello_world_soap_http.PingMeFault: PingMeFault raised by serverat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)at java.lang.reflect.Constructor.newInstance(Constructor.java:494)at org.apache.cxf.interceptor.ClientFaultConverter.processFaultDetail(ClientFaultConverter.java:125)at org.apache.cxf.interceptor.ClientFaultConverter.handleMessage(ClientFaultConverter.java:68)at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:90)at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:179)at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:56)at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:395)at org.apache.cxf.transport.jms.JMSConduit$JMSOutputStream.handleResponse(JMSConduit.java:375)at org.apache.cxf.transport.jms.JMSConduit$JMSOutputStream.doClose(JMSConduit.java:256)at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:119)at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:180)at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:200)at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:186)at org.apache.camel.component.cxf.CxfProducer.process(CxfProducer.java:152)at org.apache.camel.component.cxf.CxfProducer.process(CxfProducer.java:136)at org.apache.camel.impl.converter.AsyncProcessorTypeConverter$ProcessorToAsynProcessorBridge.process(AsyncProcessorTypeConverter.java:44)at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:73)at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:136)at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:86)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:44)at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:174)at org.apache.camel.component.cxf.CamelInvoker.invoke(CamelInvoker.java:161)... 19 moreExpected exception: PingMeFault has occurred: PingMeFault raised by server"
      },
      {
        "author": "Willem Jiang",
        "created_at": "01/Oct/07 14:37",
        "created_at_epoch": 1191249420,
        "text": "Yes, the exception is expected."
      },
      {
        "author": "James Strachan",
        "created_at": "11/Oct/07 18:31",
        "created_at_epoch": 1192127460,
        "text": "gonna mark this as resolved as we've quite a few examples now"
      }
    ],
    "id": 45,
    "url": "https://issues.apache.org/jira/browse/CAMEL-45"
  },
  {
    "type": "Improvement",
    "assignee": "Claus Ibsen",
    "createdAt": "13/Jun/07 18:32",
    "created_at_epoch": 1181759520,
    "description": "Peter thanks a lot for the great work on the ant files.We will sure include it in the 1.4.Would it be possible to have a property etc to easy set the correct Camel version. I am sure we forget.In you build files its set to 1.3-SNAPSHOT.",
    "comments": [
      {
        "author": "Peter Jones",
        "created_at": "07/Apr/08 18:36",
        "created_at_epoch": 1207593360,
        "text": "Hi there,I've attached a patch which adds some build.xml files for building the examples with ant.  Includes minor README.txt file changes for instructions for ant.  If you have any comments or would like any additions/modifications made please let me know!Thanks,Peter"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "08/Apr/08 18:41",
        "created_at_epoch": 1207680060,
        "text": "Damm I changed the description and did not add a new comment. Peter see my notes in the description."
      },
      {
        "author": "Peter Jones",
        "created_at": "09/Apr/08 02:36",
        "created_at_epoch": 1207708560,
        "text": "Hi Claus,Leaving the camel.version property set to 1.3-SNAPSHOT in the common-build.xml is definitely likely to not get updated.  The only place this property was being used, was in building a jar for a sample (in the jar name), and it was included just to be consistent with maven naming.  However, the build.jar target is only executed if you pass in -Dbuild.jar=true right now.  So, I'm thinking of just deleting the camel.version property, and the build.jar target altogether... the samples will run fine without this, so it doesn't serve much purpose.  Do you think thats reasonable?One other thing I accidentally omitted was executing dot to generate svg files for the camel-example-docs sample.  I've updated my copy of that sample's build file to do that, and I'll attach an updated patch in the morning to replace the earlier patch.Cheers,Peter"
      },
      {
        "author": "Peter Jones",
        "created_at": "09/Apr/08 13:56",
        "created_at_epoch": 1207749360,
        "text": "Attached a replacement for the previous patch.  This patch removes the reference to camel.version and the build.jar target from common_build.xml and adds a generatedot macro which is used by the camel-example-docs sample."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "11/Apr/08 04:27",
        "created_at_epoch": 1207888020,
        "text": "Peter I suppose the requirement for the backport jar is a requirement by ActiveMQ 5.0 to support JDK1.4?<include name=\"*/backport-util-concurrent-.jar\"/>Camel does however only run on JDK1.5 but it is possible to run it on 1.4http://activemq.apache.org/camel/can-i-use-camel-on-java-14.html"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "11/Apr/08 04:36",
        "created_at_epoch": 1207888560,
        "text": "Peter I get the ANT warning while starting the bam examplerun:Warning: Reference sample.run.classpath has not been set at runtime, but was found duringbuild file parsing, attempting to resolve. Future versions of Ant may supportreferencing ids defined in non-executed targets.I am using ANT v1.7.0"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "11/Apr/08 04:50",
        "created_at_epoch": 1207889400,
        "text": "Peter.The spring-xquery sample does not properly initialize log4j so it uses the log4j.properties from the src/main/resources folderrun:Warning: Reference sample.run.classpath has not been set at runtime, but was found duringbuild file parsing, attempting to resolve. Future versions of Ant may supportreferencing ids defined in non-executed targets.[java]log4j:WARN No appenders could be found for logger (org.apache.camel.spring.Main).[java]log4j:WARN Please initialize the log4j system properly."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "11/Apr/08 04:57",
        "created_at_epoch": 1207889820,
        "text": "Applied the patch to trunk and added a few missing log4j.properties to some examples."
      },
      {
        "author": "Peter Jones",
        "created_at": "11/Apr/08 16:56",
        "created_at_epoch": 1207932960,
        "text": "Hi Claus,Yes, the backport_util_concurrent seems to be required by the samples which use activemq.For the ant 1.7 warning:Warning: Reference sample.run.classpath has not been set at runtime, but was found duringbuild file parsingI've attached a small patch for common_build.xml.  Sorry about that, I only tested with ant 1.6.5, and it seems that there has been a change which prints this warning if you reference a property prior to its definition in the build file.Thanks for applying the patch!Peter"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "11/Apr/08 17:05",
        "created_at_epoch": 1207933500,
        "text": "Peter sure think. Your patch is great.Is it possible to add an ant target for all the samples so the end user can generate the visualization dot documentation.Using maven you runmvn camel:dot"
      },
      {
        "author": "Peter Jones",
        "created_at": "11/Apr/08 17:21",
        "created_at_epoch": 1207934460,
        "text": "Hi Claus,For sure this is possible.  Probably would add a camel.dot target to each build.xml which calls the generatedot macro in common_build.xml.  So something like:<target name=\"camel.dot\"><generatedot ... /></target>The run target in camel-examples-docs/build.xml is the only one which uses the generatedot macro at the moment.There is one issue which I wasn't quite able to work out so far with the generatedot macro.  On unix, passing a wildcard to the dot executable seems to work, so the macro can call: \"dot -T svg -O *.dot\" for instance and generate svg files for all of the .dot files.  When I tested on windows though, I had to pass in the full name of the .dot file: \"dot.exe -T svg -O routes.dot\".  Would be nice to figure out a better way to make the macro as generic as possible."
      },
      {
        "author": "Peter Jones",
        "created_at": "12/Apr/08 22:22",
        "created_at_epoch": 1208038920,
        "text": "Hi Claus,I attached a patch which adds a camel.dot target to the common_build.xml file.  So this should be able to be called from the other samples.  It generates .svg files for any .dot files in the samples.  I'm not sure if this is everything you meant though.  It looks like the maven plugin probably also generates an index.html file.  I'll have to look at that a bit closer.  If this is needed also, could maybe add an ant xslt task to create the index.html somehow.What do you think?Cheers,Peter"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "13/Apr/08 07:03",
        "created_at_epoch": 1208070180,
        "text": "Peter this is great.I would love some more information in the README.TXT files that you can run the ant camel.dot target to generate visualization graphsAnd that you need dot.exe in the PATH for it to work.You could add a link to:http://activemq.apache.org/camel/visualisation.html"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "13/Apr/08 07:04",
        "created_at_epoch": 1208070240,
        "text": "And this wiki page could use an update of that you can run the examples using ANT now (@since 1.4)http://activemq.apache.org/camel/running-examples.html"
      },
      {
        "author": "Peter Jones",
        "created_at": "14/Apr/08 16:55",
        "created_at_epoch": 1208192100,
        "text": "Hi Claus,I attached readme.patch which has a very minor change to mention the camel.dot target in the spring example and an update for the docs example.  I don't have the permissions to edit the wiki page linked above.  I think updating the page with text as follows should do (the elipsis... just indicates stuff that doesn't need to be changed):[...]Before you start[...]To run the demos with maven, you need to download and install Apache Maven.[...]Since Camel 1.4, you can also run the examples with Ant.  To do so, downloadand install Apache Ant.Several of the examples depend on other projects which you will need todownload to run with Ant.  Refer to the individual example README.txt files fordetails.[...]Running the examples in AntTo run an example, change to the directory of the example you want to run,set any environment variables mentioned in the README.txt, and then launchant:on UNIXcd camel-example-springexport ACTIVEMQ_HOME=<path to ActiveMQ install directory>anton Windowscd camel-example-springset ACTIVEMQ_HOME=<path to ActiveMQ install directory>ant"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "14/Apr/08 19:22",
        "created_at_epoch": 1208200920,
        "text": "Thanks a lot Peter for all the patches and keep on improving it.Now Camel has a broader audience as they can try it out of the box with ANT.Now we just need some better examples"
      }
    ],
    "id": 46,
    "url": "https://issues.apache.org/jira/browse/CAMEL-46"
  },
  {
    "type": "Improvement",
    "assignee": "Jonas B. Lim",
    "createdAt": "15/Jun/07 07:00",
    "created_at_epoch": 1181890800,
    "description": "The content of the docbook would exist inside confluence and have the tool retrieve it and  transform them nicely into a docbook format.Here's an example of the book for ActiveMQhttps://svn.apache.org/repos/asf/activemq/trunk/activemq-book/",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "15/Jun/07 08:12",
        "created_at_epoch": 1181895120,
        "text": "added initial source for the maven plugin and  docbook project at  :https://svn.apache.org/repos/asf/activemq/camel/trunk/camel-bookhttps://svn.apache.org/repos/asf/activemq/camel/trunk/tooling/maven/maven-html-to-docbook/r547564The docbook transformation still needs a lot of improvement in the following   :1. handling of images - currently does not handle images2. handling of href links (current transformation converts all local links to complete url ie.http://activemq.apache.org/camel/user-guide.html)3. improving the format of the docbook markup"
      },
      {
        "author": "James Strachan",
        "created_at": "15/Jun/07 10:43",
        "created_at_epoch": 1181904180,
        "text": "Great work!Does the build work for you btw; when I tried it I got...[INFO][docbkx:generate-pdf{execution: default}][INFO]Processing Camel.xmlErrorFailure reading /workspace/java/camel/camel-book/target/docbkx/source/Camel.xml: /workspace/java/camel/camel-book/target/docbkx/source/index.xml  (No such file or directory)which is a bit bizarre as that file does exist"
      },
      {
        "author": "Jonas B. Lim",
        "created_at": "18/Jun/07 08:36",
        "created_at_epoch": 1182155760,
        "text": "I seem to have  left out an extra space on  the entity declarion in the main docbook  xml (Camel.xml). Windows  was just ignoring this space so it was builiding in my environment.updated the maven docbook plugin at : r548256"
      },
      {
        "author": "Jonas B. Lim",
        "created_at": "20/Jun/07 14:32",
        "created_at_epoch": 1182349920,
        "text": "added  process to download all image files  and store them where the html output can reference them.  Next would be to figure out how to apply this for the pdf outputr:549119"
      },
      {
        "author": "James Strachan",
        "created_at": "22/Jun/07 11:42",
        "created_at_epoch": 1182512520,
        "text": "BTW I've updated the pom to include a decent amount of content; though it seems to break the generator now. Not sure why.It seemed to be when I added all the enterprise integration pattern pages; I tried looking at the XML to see if I could grok why things bafed but I couldn't spot it - any ideas?"
      },
      {
        "author": "James Strachan",
        "created_at": "22/Jun/07 11:44",
        "created_at_epoch": 1182512640,
        "text": "Incidentally, could we change the XSL so that the <chapter><title> is actually the <h1> heading on the page? Right now the chapter headings are the file names which are not great as they are lower case and have - in them"
      },
      {
        "author": "James Strachan",
        "created_at": "22/Jun/07 12:40",
        "created_at_epoch": 1182516000,
        "text": "BTW I was wondering; should we switch the phase that the docbook generation happens to the site phase? Then the build only kicks in when creating the site etc.(We probably wanna also copy the HTML and PDF to the site/doc directory or something so that site:deploy will deploy the PDFs etc)"
      },
      {
        "author": "James Strachan",
        "created_at": "22/Jun/07 12:41",
        "created_at_epoch": 1182516060,
        "text": "Oh one more thoughtWhen we get the PDF generation thingy working again; we should include the PDF and HTML versions in the distro. Maybe indoc/reference/html/camel.pdfThen we've somewhere we can put the site / javadoc in there later on"
      },
      {
        "author": "Jonas B. Lim",
        "created_at": "25/Jun/07 09:56",
        "created_at_epoch": 1182765360,
        "text": "added  updates touse the first h1/h2 find as the page headingchange the plugin phase to sitehandle duplicate anchor/bridgehead ids - this was causing the generator to break on book-pattern-appendix.html and book-component-appendix.html resourcesimages are now handled nicely in html but still needs work when to support pdf output.  Another thing to work on are the html links. It would be nice if the  links are  inside the docbookrev: 550436"
      },
      {
        "author": "James Strachan",
        "created_at": "25/Jun/07 10:27",
        "created_at_epoch": 1182767220,
        "text": "to make it easier to track the various bits and pieces, I'm gonna create a few sub-tasks"
      },
      {
        "author": "James Strachan",
        "created_at": "25/Jun/07 13:03",
        "created_at_epoch": 1182776580,
        "text": "BTW I just moved the camel-book module into the tooling directory (as new users won't really need to look much at this module as its mostly a tool to create the PDF from the wiki)"
      },
      {
        "author": "James Strachan",
        "created_at": "03/Jul/07 10:34",
        "created_at_epoch": 1183458840,
        "text": "Great work Jonas - its looking good!"
      },
      {
        "author": "James Strachan",
        "created_at": "16/Aug/07 07:37",
        "created_at_epoch": 1187249820,
        "text": "Hiram's change to use princexml.com fixes this issue.I've refactored the camel-book module to be called camel-manual now and it generates both a HTML and PDF representation nicely now in target/site/manual/Note that you must have princexml.com installed for this to work!"
      }
    ],
    "id": 47,
    "url": "https://issues.apache.org/jira/browse/CAMEL-47"
  },
  {
    "type": "New Feature",
    "assignee": "Willem Jiang",
    "createdAt": "22/Jun/07 16:16",
    "created_at_epoch": 1182528960,
    "description": null,
    "comments": [],
    "id": 48,
    "url": "https://issues.apache.org/jira/browse/CAMEL-48"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 10:27",
    "created_at_epoch": 1182767220,
    "description": null,
    "comments": [],
    "id": 49,
    "url": "https://issues.apache.org/jira/browse/CAMEL-49"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 10:29",
    "created_at_epoch": 1182767340,
    "description": "I think this is due to the generated HTML on the Auto-Export plugin in Confluence; its generating those little icons after a link to indicate if its external links etc. Can we shave these things off in the XSL?",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "26/Jun/07 14:03",
        "created_at_epoch": 1182866580,
        "text": "fixed in revision 550810"
      }
    ],
    "id": 50,
    "url": "https://issues.apache.org/jira/browse/CAMEL-50"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 10:37",
    "created_at_epoch": 1182767820,
    "description": "Am not sure if its easy to just configure the 'target/docbkx' directory in the maven plugins, or if we need a separate copy task",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "26/Jun/07 07:58",
        "created_at_epoch": 1182844680,
        "text": "updated the maven plugin configurations to  output the pdf/html to target/site/bookrev: 550722"
      },
      {
        "author": "James Strachan",
        "created_at": "26/Jun/07 09:58",
        "created_at_epoch": 1182851880,
        "text": "looks like we need to copy the images too for the html version...http://activemq.apache.org/camel/maven/camel-book/book/html/ch03.html"
      },
      {
        "author": "Jonas B. Lim",
        "created_at": "26/Jun/07 10:21",
        "created_at_epoch": 1182853260,
        "text": "oops..forgot to copy the imagesrev: 550767"
      }
    ],
    "id": 51,
    "url": "https://issues.apache.org/jira/browse/CAMEL-51"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 10:46",
    "created_at_epoch": 1182768360,
    "description": "sometimes we get some strange stuff inserted into the generated docbook. e.g. the first part of book-architecture.xml contains some bogus stuff...<title>Architecture</title>\n  <section>\n    <ulink url=\"http://cwiki.apache.org/CAMEL/dsl.html\">Routing Domain Specific Language (DSL)</ulink><ulink url=\"http://cwiki.apache.org/CAMEL/xml-configuration.html\">Xml Configuration</ulink><ulink url=\"http://cwiki.apache.org/CAMEL/routes.html\">routing and mediation rules</ulink><ulink url=\"http://cwiki.apache.org/CAMEL/http://activemq.apache.org/camel/maven/camel-core/apidocs/org/apache/camel/CamelContext.html\">CamelContext\n      <mediaobject>\n        <imageobject>\n          <imagedata fileref=\"../images/linkext7.gif\"depth=\"7\"width=\"7\"/>\n        </imageobject>\n      </mediaobject>\n    </ulink>\n    <ulink url=\"http://cwiki.apache.org/CAMEL/enterprise-integration-patterns.html\">Enterprise Integration Patterns</ulink>\n    <para>At a high level Camel consists of aEverything between <section> and <para> looks bogus (or at least generates strangeness in the PDF). I wonder if might help if we keep the HTML that is downloaded from the site so we can see, is this a wiki issue or XSL issue etc. As right now I've no idea!",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "26/Jun/07 04:11",
        "created_at_epoch": 1182831060,
        "text": "refactored a bit the output source location.docbook source are now extracted by default to : /docbkx/docbkx-sourcewiki source  are now extracted by default to :  /docbkx/wiki-sourcerev: 550675"
      }
    ],
    "id": 52,
    "url": "https://issues.apache.org/jira/browse/CAMEL-52"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 10:55",
    "created_at_epoch": 1182768900,
    "description": "If you look at chapter 3 on Enterprise Integration Patterns; or section 5 the Pattern Appendix; there's lots of h2 usage for each collection of patterns. e.g. the first section is\"Message Systems\" then \"Messaging Channels\" etc.http://cwiki.apache.org/CAMEL/book-pattern-appendix.htmlyet these don't seem to come out in the docbook; nor do they appear in the table of contents etc",
    "comments": [],
    "id": 53,
    "url": "https://issues.apache.org/jira/browse/CAMEL-53"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "25/Jun/07 11:05",
    "created_at_epoch": 1182769500,
    "description": "It'd be great to reuse the html-to-docbook plugin on other projects like ActiveMQ and ServiceMix. While its totally cool being able to overload the XSL's on a per project basis; mostly it seems to be generic apache HTML -> DocBook stuff. So am wondering if it'd make more sense to put these XSL files into the plugin (so that they are shared among all the various projects, rather than cutting and pasting into each project).",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "28/Jun/07 09:12",
        "created_at_epoch": 1183021920,
        "text": "fixed in rev: 551512also added an optional configuration parameter <xslFile>  which will handle an xsl location if a project would like to overload the default  xsl"
      }
    ],
    "id": 54,
    "url": "https://issues.apache.org/jira/browse/CAMEL-54"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "25/Jun/07 13:42",
    "created_at_epoch": 1182778920,
    "description": "example endpoint to connect to the camel IRC channel: \"irc://camel-irc@irc.codehaus.org/%23camel\"Component has no unit tests, and breaks when you try and do to(endpointA, endpointB).Connections are shared between Endpoints of the same username and host.only dep is IRClib v. 1.10http://moepii.sourceforge.net/",
    "comments": [],
    "id": 55,
    "url": "https://issues.apache.org/jira/browse/CAMEL-55"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "26/Jun/07 13:30",
    "created_at_epoch": 1182864600,
    "description": null,
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "27/Jun/07 02:33",
        "created_at_epoch": 1182911580,
        "text": "Fixed at   rev: 551017."
      }
    ],
    "id": 56,
    "url": "https://issues.apache.org/jira/browse/CAMEL-56"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "27/Jun/07 02:52",
    "created_at_epoch": 1182912720,
    "description": "images are currently not supported  in pdf output. We'll need to tweak the xsl files to support this",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "03/Jul/07 10:16",
        "created_at_epoch": 1183457760,
        "text": "fixed in r552771"
      },
      {
        "author": "James Strachan",
        "created_at": "03/Jul/07 10:35",
        "created_at_epoch": 1183458900,
        "text": "Some of the images look a bit odd (kinda like the black is missing) - not sure why that is. Any idea? Could it be certain types of images don't work too well (jpg v png v gif or something?)"
      },
      {
        "author": "Jonas B. Lim",
        "created_at": "04/Jul/07 03:19",
        "created_at_epoch": 1183519140,
        "text": "Not really sure either but it appears the pdf conversion works well  with jpg format.  I tried converting the images that  were odd to jpg and they were rendered properly.  Any chance we can convert those images in the site  to jpg format ?"
      }
    ],
    "id": 57,
    "url": "https://issues.apache.org/jira/browse/CAMEL-57"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "29/Jun/07 13:18",
    "created_at_epoch": 1183123080,
    "description": "ERROR:  'null'FATAL ERROR:  'Could not compile stylesheet'javax.xml.transform.TransformerConfigurationException: Could not compile stylesheetat com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:824)at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:619)at org.apache.camel.maven.GenerateDocBookMojo.process(GenerateDocBookMojo.java:221)at org.apache.camel.maven.GenerateDocBookMojo.execute(GenerateDocBookMojo.java:160)at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:420)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:330)at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:123)at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)at java.lang.reflect.Method.invoke(Method.java:585)at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)at org.codehaus.classworlds.Launcher.main(Launcher.java:375)[INFO][docbkx:generate-html{execution: execution1}][INFO]Processing manual.xml[INFO][docbkx:generate-pdf{execution: execution2}][INFO]Processing manual.xml[INFO]Using com.icl.saxon.aelfred.SAXDriver as SAX2 Parser[INFO]building formatting object tree[INFO]setting up fonts[INFO][1][INFO][2][INFO]Parsing of document complete, stopping renderer[INFO]------------------------------------------------------------------------[ERROR]BUILD ERROR[INFO]------------------------------------------------------------------------[INFO]Failed to convert to PDFEmbedded error:file:/workspace/java/camel/tooling/camel-book/:11:2965fo:flow must contain block-level children",
    "comments": [],
    "id": 58,
    "url": "https://issues.apache.org/jira/browse/CAMEL-58"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "29/Jun/07 17:35",
    "created_at_epoch": 1183138500,
    "description": null,
    "comments": [],
    "id": 59,
    "url": "https://issues.apache.org/jira/browse/CAMEL-59"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "02/Jul/07 11:19",
    "created_at_epoch": 1183375140,
    "description": null,
    "comments": [],
    "id": 60,
    "url": "https://issues.apache.org/jira/browse/CAMEL-60"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "02/Jul/07 14:46",
    "created_at_epoch": 1183387560,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "02/Jul/07 16:02",
        "created_at_epoch": 1183392120,
        "text": "See here for more details:http://cwiki.apache.org/CAMEL/file.html"
      }
    ],
    "id": 61,
    "url": "https://issues.apache.org/jira/browse/CAMEL-61"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "02/Jul/07 14:59",
    "created_at_epoch": 1183388340,
    "description": null,
    "comments": [],
    "id": 62,
    "url": "https://issues.apache.org/jira/browse/CAMEL-62"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "03/Jul/07 13:59",
    "created_at_epoch": 1183471140,
    "description": null,
    "comments": [],
    "id": 63,
    "url": "https://issues.apache.org/jira/browse/CAMEL-63"
  },
  {
    "type": "Improvement",
    "assignee": "Willem Jiang",
    "createdAt": "03/Jul/07 17:41",
    "created_at_epoch": 1183484460,
    "description": "For example splitter() should be split() and resequencer should be resequence.Old methods should be deprecated.",
    "comments": [
      {
        "author": "Claus Ibsen",
        "created_at": "29/Oct/08 10:07",
        "created_at_epoch": 1225274820,
        "text": "This applies for the Spring DSL as well.And I guess Gertv have used good names in his Scala DSL?I guess we should only do this in the code when we have created the 1.x branch so trunk is 2.0.Does it make sense to keep the old DSL as @deprecated. For the Spring DSL it would be really painful to keep the old and new DSL?"
      },
      {
        "author": "Hadrian Zbarcea",
        "created_at": "29/Oct/08 13:30",
        "created_at_epoch": 1225287000,
        "text": "@Willem, could you please not start working on this just yet.  I want to have a few discussions about the dsl in the coming weeks that may impact this."
      },
      {
        "author": "Willem Jiang",
        "created_at": "29/Oct/08 13:44",
        "created_at_epoch": 1225287840,
        "text": "@Hadrian, I will hold it until we get the conculsion about the DSL"
      },
      {
        "author": "Willem Jiang",
        "created_at": "13/Nov/08 04:09",
        "created_at_epoch": 1226549340,
        "text": "@ClausYes, It is painful and we can't support old spring xsd at the same time. So I suggest we don't tough the Spring DSL.@ALLI just went through the ProcessorType and Spring configuration. Now we are using the noun as the processor name, the methods which create the processor types are using the noun for the EIP actions. In these case we can think we just put the processor in the middle of the routing rule, and the processor will take care of the more detail EIP verb action.So I don't will to use verbs for the EIP actions in Camel DSL.Any thoughts?Willem"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "13/Nov/08 10:23",
        "created_at_epoch": 1226571780,
        "text": "I think we need to align the Java and Spring DSL so we use the same verbs otherwise it's confusing. So I think we need to clean both Java and Spring DSL if they are not correct.We better take the API breaks in a big bang with 2.0 than newer."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "13/Nov/08 10:24",
        "created_at_epoch": 1226571840,
        "text": "Willem I dont understand you @ALL. Could you give an example?"
      },
      {
        "author": "Willem Jiang",
        "created_at": "14/Nov/08 02:54",
        "created_at_epoch": 1226631240,
        "text": "Here is the java doc for the splitter method in ProcessorType/**Creates the <ahref=\"http://activemq.apache.org/camel/delayer.html\">Delayer</a> patternwhere an expression is used to calculate the time which the message willbe dispatched on*@return the builder*/public ThrottlerType throttler(long maximumRequestCount) \n{\n        ThrottlerType answer = new ThrottlerType(maximumRequestCount);\n        addOutput(answer);\n        return answer;\n    }we could think the throtter method as the ThrotterType creating method,and it is same with the Spring configuration such as<camelContext id=\"camel\"xmlns=\"http://activemq.apache.org/camel/schema/spring\"><route><from uri=\"seda:a\" /><throttler maximumRequestsPerPeriod=\"3\" timePeriodMillis=\"30000\"><to uri=\"mock:result\" /></throttler></route></camelContext>In this way we could just think to put a throttler in the middle of router rule, if your are using the GUI to write the rule , you just drop a box which name is throttler in the rule digraph.If the EPI action is named with noun, it will make the Spring DSL , even the  Camel GUI more consistent with the Java DSL."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "14/Nov/08 07:20",
        "created_at_epoch": 1226647200,
        "text": "Well first of all the javadoc was wrong - I created a ticketCAMEL-1087I thought the idea of this ticket was to use better wording (verbs) for the DSLSo for instance if you have a route like:from(x).throttler(10).to(y)Then when you read it in English it's not correct. It should be:from(x).throttle(10).to(y)The same applies forsplitter -> splitaggregator -> aggregatedelayer -> delay"
      },
      {
        "author": "Willem Jiang",
        "created_at": "21/Nov/08 03:48",
        "created_at_epoch": 1227239280,
        "text": "Yes, it could be a huge change.  I will head to this now.Do we still need to support throttler in camel 2.0 at the same time?It is not easy to make the Spring DSL support both throttler and throttle."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "21/Nov/08 07:05",
        "created_at_epoch": 1227251100,
        "text": "I think we need to break the compability. So the Java DSL should just rename the verbs (no need to mark @deprecated) otherwise the method list when end users hit ctrl+space gets to big.And hence the spring DSL should also be renamed.But I also think we need a[HEADS UP]or[DISCUSS]on the dev forum about this breaking, so everyone agrees that we do this"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "21/Nov/08 07:05",
        "created_at_epoch": 1227251100,
        "text": "> It is not easy to make the Spring DSL support both throttler and throttle.No not possible"
      },
      {
        "author": "Hadrian Zbarcea",
        "created_at": "21/Nov/08 14:41",
        "created_at_epoch": 1227278460,
        "text": "Actually, it is possible, but I think we'll be trading different kinds of pains for the users.  Since we'll have to removed them at some point, better do it now.+1 of Claus' proposal to break compatibility."
      },
      {
        "author": "Willem Jiang",
        "created_at": "28/Nov/08 02:56",
        "created_at_epoch": 1227840960,
        "text": "Changing the method name:In the ProcessorTypesplitter -> splitDoneresequencer -> resequenceDoneaggregator -> aggregateDonedelayer -> delayDonethrottler -> throttleDoneIn the ExceptionTypedelay -> setDelayDone"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "29/Nov/08 09:03",
        "created_at_epoch": 1227949380,
        "text": "I would propose the rename the setDelay to redeliveryDelay to use a consitent builder syntax (not having set/get etc.)In the ExceptionTypesetDelay -> redeliveryDelayUsing redeliveryDelay is also concise with the other fluent method such as:maximumRedeliveryDelay"
      },
      {
        "author": "Willem Jiang",
        "created_at": "30/Nov/08 02:04",
        "created_at_epoch": 1228010640,
        "text": "@Clausgood suggestion, I will change it in my next commit."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "30/Nov/08 08:15",
        "created_at_epoch": 1228032900,
        "text": "@WillemShould the spring DSL also be changed to use the same verbs as the Java DSL?For instance: @XmlRootElement(name = \"throttler\")Should be:@XmlRootElement(name = \"throttle\")And remeber to change the attribute in RedeliveryPolicyType to also beredeliveryDelayso it's aligned with the Java DSL fluent builder syntax:@XmlAttributeprivate Long delay;"
      },
      {
        "author": "Willem Jiang",
        "created_at": "01/Dec/08 02:55",
        "created_at_epoch": 1228100100,
        "text": "Changed the JAXB annotationsAggregatorType@XmlRootElement(name = \"aggregator\") -> @XmlRootElement(name = \"aggregate\")DelayerType@XmlRootElement(name = \"delay\") -> @XmlRootElement(name = \"delay\")@XmlElement private Long delay = 0L; -> @XmlElement   private Long delayTime = 0L;RedeliveryPolicyType@XmlAttribute   private Long delay;  -> @XmlAttribute  private Long redeliveryDelay;ResequencerType@XmlRootElement(name = \"resequencer\") ->  @XmlRootElement(name = \"resequence\")SplitterType@XmlRootElement(name = \"splitter\") -> @XmlRootElement(name = \"split\")ThrottlerType@XmlRootElement(name = \"throttler\")  -> @XmlRootElement(name = \"throttle\")"
      },
      {
        "author": "Claus Ibsen",
        "created_at": "01/Dec/08 11:47",
        "created_at_epoch": 1228132020,
        "text": "We should document on the 2.0 release notes that the DSL have changed for the above types."
      },
      {
        "author": "Willem Jiang",
        "created_at": "03/Dec/08 02:47",
        "created_at_epoch": 1228272420,
        "text": "committed the change and updated the 2.0 release notes."
      },
      {
        "author": "Claus Ibsen",
        "created_at": "31/Jul/09 06:33",
        "created_at_epoch": 1249021980,
        "text": "Closing 2.0m1 tickets"
      }
    ],
    "id": 64,
    "url": "https://issues.apache.org/jira/browse/CAMEL-64"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "04/Jul/07 19:37",
    "created_at_epoch": 1183577820,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "04/Jul/07 19:45",
        "created_at_epoch": 1183578300,
        "text": "implementation and test case added (ThrottlerTest in camel-core) just needs documentation. See rev: 553312"
      },
      {
        "author": "James Strachan",
        "created_at": "09/Jul/07 10:57",
        "created_at_epoch": 1183978620,
        "text": "documentation:http://cwiki.apache.org/CAMEL/throttler.html"
      }
    ],
    "id": 65,
    "url": "https://issues.apache.org/jira/browse/CAMEL-65"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "04/Jul/07 19:40",
    "created_at_epoch": 1183578000,
    "description": "something likemockEndpoint.expectMessagesAscending(header(\"foo\"))",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "09/Jul/07 12:32",
        "created_at_epoch": 1183984320,
        "text": "see documentation:http://cwiki.apache.org/CAMEL/mock.html"
      }
    ],
    "id": 66,
    "url": "https://issues.apache.org/jira/browse/CAMEL-66"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "08/Jul/07 06:02",
    "created_at_epoch": 1183874520,
    "description": "to make it easy to perform conditional routing based on if a message matches a certain XSD etc",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "07/Aug/07 16:36",
        "created_at_epoch": 1186504560,
        "text": "For JAXP validation (XSD) seehttp://cwiki.apache.org/CAMEL/validation.htmlfor RelaxNG seehttp://cwiki.apache.org/CAMEL/jing.html"
      }
    ],
    "id": 67,
    "url": "https://issues.apache.org/jira/browse/CAMEL-67"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "08/Jul/07 06:07",
    "created_at_epoch": 1183874820,
    "description": null,
    "comments": [],
    "id": 68,
    "url": "https://issues.apache.org/jira/browse/CAMEL-68"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "08/Jul/07 06:15",
    "created_at_epoch": 1183875300,
    "description": null,
    "comments": [],
    "id": 69,
    "url": "https://issues.apache.org/jira/browse/CAMEL-69"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "08/Jul/07 06:24",
    "created_at_epoch": 1183875840,
    "description": "we could keep support for queue: prefix for a short while, deprecating it; then remove it completely in 1.2.the name \"seda:\" is probably better",
    "comments": [],
    "id": 70,
    "url": "https://issues.apache.org/jira/browse/CAMEL-70"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "08/Jul/07 06:38",
    "created_at_epoch": 1183876680,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "30/Jul/07 16:50",
        "created_at_epoch": 1185814200,
        "text": "Code committed; also the old[From|To|*]Builder classes have been removed and replaced with the camel.model.*Type classes which map to the JAXB2 XML too"
      }
    ],
    "id": 71,
    "url": "https://issues.apache.org/jira/browse/CAMEL-71"
  },
  {
    "type": "Bug",
    "assignee": "Willem Jiang",
    "createdAt": "08/Jul/07 10:33",
    "created_at_epoch": 1183890780,
    "description": "Because of the File.separator is different between the unix and windows system.So the test can't pass in windows box.I just attached a patch for it.Please have a look at it, I tested it in windows box.",
    "comments": [],
    "id": 72,
    "url": "https://issues.apache.org/jira/browse/CAMEL-72"
  },
  {
    "type": "Improvement",
    "assignee": "Willem Jiang",
    "createdAt": "09/Jul/07 06:07",
    "created_at_epoch": 1183961220,
    "description": "This demo only setup the router and does not show how the messages which should be routedI did as the REAME said, but I only get the some broker service start up code info.I can't see the Received exchange: *** logger info as the camel-example-jms-file shows.We need to add the code or description to show how to generate the jms message for the router.",
    "comments": [],
    "id": 73,
    "url": "https://issues.apache.org/jira/browse/CAMEL-73"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "12/Jul/07 11:31",
    "created_at_epoch": 1184239860,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "12/Jul/07 11:33",
        "created_at_epoch": 1184239980,
        "text": "See the camel-juel module committed at rev: 555586"
      },
      {
        "author": "James Strachan",
        "created_at": "12/Jul/07 12:04",
        "created_at_epoch": 1184241840,
        "text": "Docs athttp://activemq.apache.org/camel/el.html"
      }
    ],
    "id": 74,
    "url": "https://issues.apache.org/jira/browse/CAMEL-74"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "17/Jul/07 06:46",
    "created_at_epoch": 1184654760,
    "description": "let's  move  internal links inside docbook. Currently, all the links are pointing to the website url",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "16/Aug/07 07:30",
        "created_at_epoch": 1187249400,
        "text": "Hiram's change to use princexml.com fixes this issue"
      }
    ],
    "id": 75,
    "url": "https://issues.apache.org/jira/browse/CAMEL-75"
  },
  {
    "type": "Sub-task",
    "assignee": "Jonas B. Lim",
    "createdAt": "23/Jul/07 11:32",
    "created_at_epoch": 1185190320,
    "description": "I wonder if this warning is an issue? Am wondering if pretty-printing formatting the XML as its written to disk (with newlines and indentations) would fix it?[INFO][docbkx:generate-pdf{execution: execution2}][INFO]Processing manual.xml[INFO]Using com.icl.saxon.aelfred.SAXDriver as SAX2 Parser[INFO]building formatting object tree[INFO]setting up fonts[INFO][1][INFO][2][INFO][1][INFO][2][INFO]area contents overflows area in line[INFO][3][INFO]area contents overflows area in line",
    "comments": [
      {
        "author": "Jonas B. Lim",
        "created_at": "26/Jul/07 09:47",
        "created_at_epoch": 1185443220,
        "text": "fixed in rev.  559771"
      }
    ],
    "id": 76,
    "url": "https://issues.apache.org/jira/browse/CAMEL-76"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "26/Jul/07 18:22",
    "created_at_epoch": 1185474120,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "03/Aug/07 20:20",
        "created_at_epoch": 1186172400,
        "text": "The ETL Sample shows this working finehttp://activemq.apache.org/camel/etl-example.html"
      }
    ],
    "id": 77,
    "url": "https://issues.apache.org/jira/browse/CAMEL-77"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "26/Jul/07 18:44",
    "created_at_epoch": 1185475440,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "26/Jul/07 18:45",
        "created_at_epoch": 1185475500,
        "text": "code successfully converted to JAXB2 now and all tests now passing"
      }
    ],
    "id": 78,
    "url": "https://issues.apache.org/jira/browse/CAMEL-78"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "27/Jul/07 08:37",
    "created_at_epoch": 1185525420,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "27/Jul/07 12:22",
        "created_at_epoch": 1185538920,
        "text": "Initial code checked in.Documentation is here:http://cwiki.apache.org/CAMEL/etl-example.html"
      }
    ],
    "id": 79,
    "url": "https://issues.apache.org/jira/browse/CAMEL-79"
  },
  {
    "type": "Bug",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "27/Jul/07 14:04",
    "created_at_epoch": 1185545040,
    "description": "Caused by:<4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.at org.apache.openjpa.meta.ClassMetaData.resolveMeta(ClassMetaData.java:1590)at org.apache.openjpa.meta.ClassMetaData.resolve(ClassMetaData.java:1564)at org.apache.openjpa.meta.MetaDataRepository.processBuffer(MetaDataRepository.java:654)at org.apache.openjpa.meta.MetaDataRepository.resolveMeta(MetaDataRepository.java:554)at org.apache.openjpa.meta.MetaDataRepository.resolve(MetaDataRepository.java:479)at org.apache.openjpa.meta.MetaDataRepository.getMetaData(MetaDataRepository.java:283)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:162)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:131)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:211)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:181)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:174)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$500(JPQLExpressionBuilder.java:61)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:1657)at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:52)at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:145)at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:642)at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:623)at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:589)at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:651)at org.apache.openjpa.kernel.QueryImpl.getOperation(QueryImpl.java:1464)at org.apache.openjpa.kernel.DelegatingQuery.getOperation(DelegatingQuery.java:120)at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:202)at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:251)at org.springframework.orm.jpa.JpaTemplate$9.doInJpa(JpaTemplate.java:313)at org.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:191)at org.springframework.orm.jpa.JpaTemplate.executeFind(JpaTemplate.java:158)at org.springframework.orm.jpa.JpaTemplate.find(JpaTemplate.java:305)at org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository$1.doInTransaction(JpaMessageIdRepository.java:76)at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:127)at org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository.contains(JpaMessageIdRepository.java:73)at org.apache.camel.processor.idempotent.IdempotentConsumer.process(IdempotentConsumer.java:57)at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:77)at org.apache.camel.component.direct.DirectEndpoint.process(DirectEndpoint.java:65)at org.apache.camel.component.direct.DirectEndpoint$1.process(DirectEndpoint.java:54)at org.apache.camel.util.ProducerCache.send(ProducerCache.java:91)at org.apache.camel.CamelTemplate.send(CamelTemplate.java:93)at org.apache.camel.processor.IdempotentConsumerTest.sendMessage(IdempotentConsumerTest.java:51)at org.apache.camel.processor.IdempotentConsumerTest.testDuplicateMessagesAreFilteredOut(IdempotentConsumerTest.java:40)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)at java.lang.reflect.Method.invoke(Method.java:585)at junit.framework.TestCase.runTest(TestCase.java:168)at junit.framework.TestCase.runBare(TestCase.java:134)at junit.framework.TestResult$1.protect(TestResult.java:110)at junit.framework.TestResult.runProtected(TestResult.java:128)at junit.framework.TestResult.run(TestResult.java:113)at junit.framework.TestCase.run(TestCase.java:124)at junit.framework.TestSuite.runTest(TestSuite.java:232)at junit.framework.TestSuite.run(TestSuite.java:227)at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)[                          main] DeadLetterChannel              ERROR On delivery attempt: 3 caught: org.springframework.dao.InvalidDataAccessApiUsageException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.; nested exception is <4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.org.springframework.dao.InvalidDataAccessApiUsageException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.; nested exception is <4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.Caused by:<4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.at org.apache.openjpa.meta.ClassMetaData.resolveMeta(ClassMetaData.java:1590)at org.apache.openjpa.meta.ClassMetaData.resolve(ClassMetaData.java:1564)at org.apache.openjpa.meta.MetaDataRepository.processBuffer(MetaDataRepository.java:654)at org.apache.openjpa.meta.MetaDataRepository.resolveMeta(MetaDataRepository.java:554)at org.apache.openjpa.meta.MetaDataRepository.resolve(MetaDataRepository.java:479)at org.apache.openjpa.meta.MetaDataRepository.getMetaData(MetaDataRepository.java:283)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:162)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:131)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:211)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:181)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:174)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$500(JPQLExpressionBuilder.java:61)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:1657)at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:52)at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:145)at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:642)at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:623)at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:589)at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:651)at org.apache.openjpa.kernel.QueryImpl.getOperation(QueryImpl.java:1464)at org.apache.openjpa.kernel.DelegatingQuery.getOperation(DelegatingQuery.java:120)at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:202)at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:251)at org.springframework.orm.jpa.JpaTemplate$9.doInJpa(JpaTemplate.java:313)at org.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:191)at org.springframework.orm.jpa.JpaTemplate.executeFind(JpaTemplate.java:158)at org.springframework.orm.jpa.JpaTemplate.find(JpaTemplate.java:305)at org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository$1.doInTransaction(JpaMessageIdRepository.java:76)at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:127)at org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository.contains(JpaMessageIdRepository.java:73)at org.apache.camel.processor.idempotent.IdempotentConsumer.process(IdempotentConsumer.java:57)at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:77)at org.apache.camel.component.direct.DirectEndpoint.process(DirectEndpoint.java:65)at org.apache.camel.component.direct.DirectEndpoint$1.process(DirectEndpoint.java:54)at org.apache.camel.util.ProducerCache.send(ProducerCache.java:91)at org.apache.camel.CamelTemplate.send(CamelTemplate.java:93)at org.apache.camel.processor.IdempotentConsumerTest.sendMessage(IdempotentConsumerTest.java:51)at org.apache.camel.processor.IdempotentConsumerTest.testDuplicateMessagesAreFilteredOut(IdempotentConsumerTest.java:40)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)at java.lang.reflect.Method.invoke(Method.java:585)at junit.framework.TestCase.runTest(TestCase.java:168)at junit.framework.TestCase.runBare(TestCase.java:134)at junit.framework.TestResult$1.protect(TestResult.java:110)at junit.framework.TestResult.runProtected(TestResult.java:128)at junit.framework.TestResult.run(TestResult.java:113)at junit.framework.TestCase.run(TestCase.java:124)at junit.framework.TestSuite.runTest(TestSuite.java:232)at junit.framework.TestSuite.run(TestSuite.java:227)at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)[                          main] DeadLetterChannel              ERROR On delivery attempt: 4 caught: org.springframework.dao.InvalidDataAccessApiUsageException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.; nested exception is <4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.org.springframework.dao.InvalidDataAccessApiUsageException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.; nested exception is <4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.Caused by:<4|true|0.9.6-incubating> org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.camel.processor.idempotent.jpa.MessageProcessed\" has not been enhanced.at org.apache.openjpa.meta.ClassMetaData.resolveMeta(ClassMetaData.java:1590)at org.apache.openjpa.meta.ClassMetaData.resolve(ClassMetaData.java:1564)at org.apache.openjpa.meta.MetaDataRepository.processBuffer(MetaDataRepository.java:654)at org.apache.openjpa.meta.MetaDataRepository.resolveMeta(MetaDataRepository.java:554)at org.apache.openjpa.meta.MetaDataRepository.resolve(MetaDataRepository.java:479)at org.apache.openjpa.meta.MetaDataRepository.getMetaData(MetaDataRepository.java:283)at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:162)[...]",
    "comments": [
      {
        "author": null,
        "created_at": "27/Jul/07 14:07",
        "created_at_epoch": 1185545220,
        "text": "Possible cleanup issue.  The test always works on a clean working copy.  Subsequent runs consistently fail.  Removing the target dir manually causes the test to pass once.This happens on winxp, don't know about other platforms."
      },
      {
        "author": "James Strachan",
        "created_at": "30/Jul/07 16:26",
        "created_at_epoch": 1185812760,
        "text": "I wonder if switching the database to use HSQL DB (i.e. memory only) fixes this?"
      },
      {
        "author": "James Strachan",
        "created_at": "10/Aug/07 07:39",
        "created_at_epoch": 1186731540,
        "text": "set the patch available flag"
      },
      {
        "author": "James Strachan",
        "created_at": "10/Aug/07 07:56",
        "created_at_epoch": 1186732560,
        "text": "Patch applied with thanks! I made a minor change, cleaning up the repo on the start of the test rather than the end (in case a test fails mid-way through)"
      },
      {
        "author": null,
        "created_at": "16/Aug/07 04:49",
        "created_at_epoch": 1187239740,
        "text": "The call to the cleanup method is actually commented out, so the cleanup doesn't take place."
      },
      {
        "author": null,
        "created_at": "16/Aug/07 04:52",
        "created_at_epoch": 1187239920,
        "text": "Also updated log4j.properties to make test cases succeed silently."
      },
      {
        "author": "James Strachan",
        "created_at": "20/Aug/07 18:05",
        "created_at_epoch": 1187633100,
        "text": "Patch applied with thanks! can you double check all the patches you intended have been applied correctly please? We can reopen if we've missed anything"
      }
    ],
    "id": 80,
    "url": "https://issues.apache.org/jira/browse/CAMEL-80"
  },
  {
    "type": "Bug",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "27/Jul/07 14:31",
    "created_at_epoch": 1185546660,
    "description": "With the current logic, during stop the service is both started and stopped.",
    "comments": [],
    "id": 81,
    "url": "https://issues.apache.org/jira/browse/CAMEL-81"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "01/Aug/07 05:28",
    "created_at_epoch": 1185946080,
    "description": "e.g. with a wire tap it'd be nice to doto(\"log:theLoggingCategory?level=error\")",
    "comments": [],
    "id": 82,
    "url": "https://issues.apache.org/jira/browse/CAMEL-82"
  },
  {
    "type": "Improvement",
    "assignee": "Brian McCallister",
    "createdAt": "02/Aug/07 23:06",
    "created_at_epoch": 1186095960,
    "description": "Converting from String to ByteBuffer is pretty straightforward, we should supply a TypeConverter which can do so",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "04/Aug/07 09:48",
        "created_at_epoch": 1186220880,
        "text": "we have bidirectional String <-> ByteBuffer converters now"
      }
    ],
    "id": 83,
    "url": "https://issues.apache.org/jira/browse/CAMEL-83"
  },
  {
    "type": "Improvement",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "02/Aug/07 23:41",
    "created_at_epoch": 1186098060,
    "description": "When there is no type converter available an NPE is thrown that requires tracing through sources to find root of problem",
    "comments": [],
    "id": 84,
    "url": "https://issues.apache.org/jira/browse/CAMEL-84"
  },
  {
    "type": "Bug",
    "assignee": "James Strachan",
    "createdAt": "03/Aug/07 04:26",
    "created_at_epoch": 1186115160,
    "description": "It appears that the deprecation of the Queue component means the VM component incorrectly complains that it is deprecated.",
    "comments": [],
    "id": 85,
    "url": "https://issues.apache.org/jira/browse/CAMEL-85"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "03/Aug/07 07:21",
    "created_at_epoch": 1186125660,
    "description": "Currently we have various approaches to POJOs in CamelPOJO component which provides a proxy to any interface; which creates a PojoInvocation as a message body which sends to a camel endpoint; then a server side which consumes the message and invokes the servera Bean component which binds messages to any bean in springa bean post processor (spring) which can inject various Camel resources via annotations; plus allows a method on a POJO to consume messages by binding flexibly the method to a message exchangea spring remoting implementationWe need to rationalise the code and promote reuse across these integration points.",
    "comments": [],
    "id": 86,
    "url": "https://issues.apache.org/jira/browse/CAMEL-86"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "03/Aug/07 19:46",
    "created_at_epoch": 1186170360,
    "description": null,
    "comments": [],
    "id": 87,
    "url": "https://issues.apache.org/jira/browse/CAMEL-87"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "06/Aug/07 14:00",
    "created_at_epoch": 1186408800,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "07/Aug/07 14:42",
        "created_at_epoch": 1186497720,
        "text": "code committed to camel-msv, just waiting for documentation"
      },
      {
        "author": "James Strachan",
        "created_at": "07/Aug/07 16:37",
        "created_at_epoch": 1186504620,
        "text": "http://cwiki.apache.org/CAMEL/msv.html"
      }
    ],
    "id": 88,
    "url": "https://issues.apache.org/jira/browse/CAMEL-88"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "07/Aug/07 09:52",
    "created_at_epoch": 1186480320,
    "description": "So far it appears that Jing is the only library capable of validating using RNC, so lets have a camel-jing component",
    "comments": [],
    "id": 89,
    "url": "https://issues.apache.org/jira/browse/CAMEL-89"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "08/Aug/07 15:16",
    "created_at_epoch": 1186586160,
    "description": null,
    "comments": [],
    "id": 90,
    "url": "https://issues.apache.org/jira/browse/CAMEL-90"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "08/Aug/07 15:28",
    "created_at_epoch": 1186586880,
    "description": null,
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "08/Aug/07 17:45",
        "created_at_epoch": 1186595100,
        "text": "the code is in examples/camel-example-bam we just need the documentation"
      },
      {
        "author": "James Strachan",
        "created_at": "13/Aug/07 18:03",
        "created_at_epoch": 1187028180,
        "text": "See the documentation here:http://cwiki.apache.org/CAMEL/bam-example.html"
      }
    ],
    "id": 91,
    "url": "https://issues.apache.org/jira/browse/CAMEL-91"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "09/Aug/07 16:31",
    "created_at_epoch": 1186677060,
    "description": "See this discussion for details of the feature...http://www.nabble.com/Exception-based-routing-tf4226796s22882.html",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "09/Aug/07 16:46",
        "created_at_epoch": 1186677960,
        "text": "Implementation committed; see these test cases...https://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/processor/InterceptRouteTest.javahttps://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/processor/InterceptWithPredicateAndProceedRouteTest.javahttps://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/processor/InterceptWithPredicateRouteTest.javahttps://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/processor/InterceptWithoutProceedRouteTest.javajust waiting for documentation..."
      },
      {
        "author": "James Strachan",
        "created_at": "13/Aug/07 19:07",
        "created_at_epoch": 1187032020,
        "text": "See the documentation here:http://cwiki.apache.org/CAMEL/dsl.html"
      }
    ],
    "id": 92,
    "url": "https://issues.apache.org/jira/browse/CAMEL-92"
  },
  {
    "type": "New Feature",
    "assignee": "James Strachan",
    "createdAt": "09/Aug/07 17:36",
    "created_at_epoch": 1186680960,
    "description": "For discussions see this threadhttp://www.nabble.com/Exception-based-routing-tf4226796s22882.html",
    "comments": [],
    "id": 93,
    "url": "https://issues.apache.org/jira/browse/CAMEL-93"
  },
  {
    "type": "Improvement",
    "assignee": "Claus Ibsen",
    "createdAt": "10/Aug/07 07:15",
    "created_at_epoch": 1186730100,
    "description": "If we are given a File body, we could optmiise the implementation to use eitherFileChannel. transferFrom()orFileChannel.transferTo()",
    "comments": [],
    "id": 94,
    "url": "https://issues.apache.org/jira/browse/CAMEL-94"
  },
  {
    "type": "Bug",
    "assignee": "James Strachan",
    "createdAt": "10/Aug/07 07:17",
    "created_at_epoch": 1186730220,
    "description": "Seehttp://www.nabble.com/FileConsumer-to-FileProducer-bug-tf4245175s22882.htmlfor issue and patch",
    "comments": [
      {
        "author": "James Strachan",
        "created_at": "10/Aug/07 07:21",
        "created_at_epoch": 1186730460,
        "text": "See the test casehttps://svn.apache.org/repos/asf/activemq/camel/trunk/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerProducerRouteTest.java"
      }
    ],
    "id": 95,
    "url": "https://issues.apache.org/jira/browse/CAMEL-95"
  },
  {
    "type": "Bug",
    "assignee": "James Strachan",
    "createdAt": "10/Aug/07 11:53",
    "created_at_epoch": 1186746780,
    "description": "e.g JMSCorrelationID, JMSReplyTo, JMSType",
    "comments": [],
    "id": 96,
    "url": "https://issues.apache.org/jira/browse/CAMEL-96"
  },
  {
    "type": "Improvement",
    "assignee": "James Strachan",
    "createdAt": "10/Aug/07 15:49",
    "created_at_epoch": 1186760940,
    "description": "e.g. something likeexception(Validation.class).maximumRetries(3);\n\nfrom(\"foo\").to(\"bar\");",
    "comments": [],
    "id": 97,
    "url": "https://issues.apache.org/jira/browse/CAMEL-97"
  },
  {
    "type": "Bug",
    "assignee": "James Strachan",
    "createdAt": "10/Aug/07 16:48",
    "created_at_epoch": 1186764480,
    "description": "For more details see:http://www.nabble.com/FileConsumer-to-FtpProducer-bug-tf4249639s22882.html",
    "comments": [],
    "id": 98,
    "url": "https://issues.apache.org/jira/browse/CAMEL-98"
  },
  {
    "type": "Improvement",
    "assignee": "Hadrian Zbarcea",
    "createdAt": "13/Aug/07 14:06",
    "created_at_epoch": 1187013960,
    "description": "jstrachan: I was wondering about moving the LifecycleStrategy and InstrumentationAgent from camel -> camel.spi (as they are kinda internal things for providers of Camel rather than end users) - any objections?",
    "comments": [],
    "id": 99,
    "url": "https://issues.apache.org/jira/browse/CAMEL-99"
  },
  {
    "type": "Improvement",
    "assignee": "Aaron Crickenberger",
    "createdAt": "13/Aug/07 19:28",
    "created_at_epoch": 1187033280,
    "description": "This may be moot given the projects' relationship, but it's a recently introduced side effect.  Before the most recent snapshot, I was able to use Camel without any ActiveMQ jar's floating around so long as I never tried to use any \"activemq:queue:foo\" URI's.  Now with the most recent snapshot, the first time I do something that uses AnnotationTypeCoverterLoader, ActiveMQConverter gets loaded, and then causes a NoClassDefFoundError for ActiveMQDestination.",
    "comments": [],
    "id": 100,
    "url": "https://issues.apache.org/jira/browse/CAMEL-100"
  }
]